---
- name: "Create eni for mgmt"
  delegate_to: localhost
  ec2_eni:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    device_index: 0
    subnet_id: "{{ r_ec2_vpc_subnet_mgmt.subnet.id }}"
    security_groups: "{{ r_ec2_group.group_id }}"
    private_ip_address: "{{ ec2_instance_interface.mgmt.private_ip_address }}"
    delete_on_termination: true
  register: r_ec2_eni_mgmt

- name: "Tag mgmt ENI"
  delegate_to: localhost
  ec2_tag:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    resource: "{{ r_ec2_eni_mgmt.interface.id }}"
    tags:
      Name: "{{ ec2_instance_name }}"
      Environment: "{{ ec2_vpc_name }}"
      Zone: "mgmt"

- name: "Associate EIP to ENI: mgmt"
  delegate_to: localhost
  ec2_eip:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    device_id: "{{ r_ec2_eni_mgmt.interface.id }}"
    private_ip_address: "{{ ec2_instance_interface.mgmt.private_ip_address }}"
    in_vpc: true
    release_on_disassociation: true
    reuse_existing_ip_allowed: true
  register: r_ec2_eip_mgmt

- name: "Tag EIP: mgmt"
  delegate_to: localhost
  ec2_tag:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    resource: "{{ r_ec2_eip_mgmt.allocation_id }}"
    tags:
      Name: "{{ ec2_instance_name }}"
      Environment: "{{ ec2_vpc_name }}"
      Zone: "mgmt"

- name: "Create ENI: inside"
  delegate_to: localhost
  ec2_eni:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    device_index: 1
    subnet_id: "{{ r_ec2_vpc_subnet_inside.subnet.id }}"
    security_groups: "{{ r_ec2_group.group_id }}"
    private_ip_address: "{{ ec2_instance_interface.inside.private_ip_address }}"
    delete_on_termination: true
  register: r_ec2_eni_inside

- name: "Tag ENI: inside"
  delegate_to: localhost
  ec2_tag:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    resource: "{{ r_ec2_eni_inside.interface.id }}"
    tags:
      Name: "{{ ec2_instance_name }}"
      Environment: "{{ ec2_vpc_name }}"
      Zone: "inside"

- name: "Find AMI in Marketplace"
  delegate_to: localhost
  ec2_ami_facts:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    owners: "{{ ec2_ami.owners }}"
    filters:
      "name": "{{ ec2_ami.name }}"
      "architecture": "{{ ec2_ami.architecture | default(omit) }}"
      "product-code": "{{ ec2_ami.product_code | default(omit) }}"
  register: r_ec2_ami_facts

- name: "Assert that at least one valid image exists"
  delegate_to: localhost
  no_log: true
  assert:
    that: r_ec2_ami_facts.images | length > 0
