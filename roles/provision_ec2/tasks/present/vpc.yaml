---
# Tasks here are not very friendly with parallelism...
# without run_once: true you may end up with multiple vpcs with the same specs
- name: "Create VPC"
  run_once: true
  delegate_to: localhost
  ec2_vpc_net:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    name: "{{ ec2_vpc_name }}"
    cidr_block: "{{ ec2_vpc_cidr }}"
    region: "{{ ec2_region }}"
  register: r_ec2_vpc_net

- name: "Create Subnet: MGMT"
  run_once: true
  delegate_to: localhost
  ec2_vpc_subnet:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    vpc_id: "{{ r_ec2_vpc_net.vpc.id }}"
    cidr: "{{ ec2_vpc_subnet_mgmt }}"
    map_public: true
    resource_tags:
      Environment: "{{ ec2_vpc_name }}"
      Name: "mgmt"
      Zone: "mgmt"
  register: r_ec2_vpc_subnet_mgmt

- name: "Create Subnet: Outside"
  run_once: true
  delegate_to: localhost
  ec2_vpc_subnet:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    vpc_id: "{{ r_ec2_vpc_net.vpc.id }}"
    cidr: "{{ ec2_vpc_subnet_outside }}"
    map_public: true
    resource_tags:
      Environment: "{{ ec2_vpc_name }}"
      Name: "outside"
      Zone: "outside"
  register: r_ec2_vpc_subnet_outside

- name: "Create Subnet: Inside"
  run_once: true
  delegate_to: localhost
  ec2_vpc_subnet:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    vpc_id: "{{ r_ec2_vpc_net.vpc.id }}"
    cidr: "{{ ec2_vpc_subnet_inside }}"
    resource_tags:
      Environment: "{{ ec2_vpc_name }}"
      Name: "inside"
      Zone: "inside"
  register: r_ec2_vpc_subnet_inside

- name: "Create IGW"
  run_once: true
  delegate_to: localhost
  ec2_vpc_igw:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    vpc_id: "{{ r_ec2_vpc_net.vpc.id }}"
  register: r_ec2_vpc_igw

- name: "Create Route Table: Zone MGMT"
  run_once: true
  delegate_to: localhost
  ec2_vpc_route_table:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    vpc_id: "{{ r_ec2_vpc_net.vpc.id }}"
    subnets:
      - "{{ r_ec2_vpc_subnet_mgmt.subnet.cidr_block }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ r_ec2_vpc_igw.gateway_id }}"
    tags:
      Environment: "{{ ec2_vpc_name }}"
      Zone: "mgmt"
  register: r_ec2_vpc_route_table_mgmt

- name: "Create Route Table: Zone Outside"
  run_once: true
  delegate_to: localhost
  ec2_vpc_route_table:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    vpc_id: "{{ r_ec2_vpc_net.vpc.id }}"
    subnets:
      - "{{ r_ec2_vpc_subnet_outside.subnet.cidr_block }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ r_ec2_vpc_igw.gateway_id }}"
    tags:
      Environment: "{{ ec2_vpc_name }}"
      Zone: "outside"
  register: ec2_vpc_route_table_outside

- name: "Create Route Table: Zone Inside"
  run_once: true
  delegate_to: localhost
  ec2_vpc_route_table:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    vpc_id: "{{ r_ec2_vpc_net.vpc.id }}"
    subnets:
      - "{{ r_ec2_vpc_subnet_inside.subnet.cidr_block }}"
    tags:
      Environment: "{{ ec2_vpc_name }}"
      Zone: "inside"
  register: r_ec2_vpc_route_table_inside

- name: "Create Keypair"
  run_once: true
  delegate_to: localhost
  ec2_key:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    name: "{{ ec2_vpc_name }}"
    key_material: "{{ lookup('file', 'keychain/' + ec2_vpc_name + '.pub') }}"

- name: "Create Security Group"
  run_once: true
  delegate_to: localhost
  ec2_group:
    aws_access_key: "{{ ec2_aws_access_key | default(omit, True) }}"
    aws_secret_key: "{{ ec2_aws_secret_key | default(omit, True) }}"
    region: "{{ ec2_region }}"
    name: "{{ ec2_group }}"
    description: "{{ ec2_group }}"
    vpc_id: "{{ r_ec2_vpc_net.vpc.id }}"
    rules: "{{ ec2_group_rules }}"
  register: r_ec2_group

